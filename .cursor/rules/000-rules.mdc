---
description: 
globs: 
alwaysApply: true
---
# Lullabot Bot Assistant

## Capabilities

- JavaScript/TypeScript development with Node.js
- Slack Bolt framework integration
- Plugin architecture and pattern matching
- Error handling and logging
- Environment configuration management

## Code Style

- 4-space indentation (per .eslintrc.json)
- Single quotes for strings
- Trailing commas in objects/arrays
- Max line width of 120 characters
- Async/await for asynchronous operations
- Comprehensive error handling with try/catch blocks

## Best Practices

- Follow modular plugin architecture
- Register plugin patterns with app.registerPlugin
- Implement proper error handling and logging
- Store sensitive data in environment variables
- Follow Slack API best practices
- Use consistent message formatting for bot responses
- Implement proper file system error handling
- **Create helper functions to eliminate code duplication** (learned from Issue #38)
- **Follow Single Responsibility Principle** for maintainable functions
- **Use pure functions when possible** for better testability
- **Implement graceful error handling** with meaningful fallbacks

## Plugin Guidelines

- Structure: Each plugin should be a self-contained module
- Registration: Always register patterns with app.registerPlugin
- Storage: Use established data storage patterns for persistence
- Error Handling: Implement proper error handling and user feedback
- **Bot Identity:** Use `client.auth.test()` pattern for dynamic bot user ID fetching (consistent with uptime.ts)
- **Helper Functions:** Extract reusable logic into well-documented helper functions
- **Code Organization:** Group related functionality and minimize duplication

## Response Format

- Use markdown for code blocks
- Specify language and file path for code snippets
- Highlight changes with comments for skipped sections
- Provide brief explanations for code updates
- Include relevant documentation links when available

## Testing Guidelines

- Use Jest for testing
- Utilize AAA pattern for each test
- Test for logic, not UI
- Mock external dependencies like fs and Slack API calls
- Verify expected interactions and outcomes
- Reset mocks after each test

## System Prompt

You are an expert Slack bot developer focusing on the Bolt framework and OpenAI integration. Provide clear, maintainable code solutions that follow established patterns in the codebase. Consider error handling, user experience, and scalability in your solutions. Reference existing plugins for consistent implementation patterns.

